/*
 * URL resolver for Micro.
 *
 * Includes support for downloading files using __[micro.download.file]__ and uploading files
 * using the __[micro.widgets.upload-button]__.
 */





/*
 * Checking if this is a download request.
 */
split:x:/../*/url?value
  =:/
  =:?
if:x:/@split/1?name
  =:download

  /*
   * This is a download request, making sure we've got a file reference in our session.
   */
  p5.web.session.get:micro.download.file
  if:x:/@p5.web.session.get/*

    /*
     * Clearing session value.
     */
    p5.web.session.set:micro.download.file

    /*
     * Echoing file back to client, adding all HTTP headers first.
     */
    for-each:x:/@p5.web.session.get/*/*/*
      p5.web.header.set:x:/@_dp/#?name
        src:x:/@_dp/#?value
    p5.web.echo-file:x:/@p5.web.session.get/*/*/file?value

  else

    /*
     * The client is not supposed to be allowed to download a file at this time.
     */
    p5.web.response.set-status-code:404
    p5.web.echo:Oops 404, the place where URLs go to die!

if:x:/@split/1?name
  =:upload

  /*
   * Upload request.
   *
   * Verifying that user has previously created an upload button, to avoid drowning
   * server in fake uploads.
   */
  if
    fetch:x:/0/0?value
      p5.web.session.get:micro.widgets.upload-button

    /*
     * Uploads allowed.
     *
     * First parsing mime message, using "/temp/" folder as attachment folder.
     */
    p5.web.request.parse-mime
      attachment-folder:~/temp/

    /*
     * Then returning all files that were successfully uploaded to client as JSON.
     */
    .files
    for-each:x:/@p5.web.request.parse-mime/*/multipart/*/*/filename
      eval-x:x:/+/*/*
      add:x:/@.files
        src
          :{0}{1}{2}
            :x:/@_dp/#/*/folder?value
            :x:/@_dp/#/*/prefix?value
            :x:/@_dp/#?value
    lambda2json:x:/@.files/*
    p5.web.header.set:Content-Type
      src:application/json
    p5.web.echo:x:/@lambda2json?value

  else

    /*
     * Uploads not allowed, since there doesn't exist any upload button on page.
     */
    p5.web.response.set-status-code:404
    p5.web.echo:Oops 404, the place where URLs go to die!

else

  /*
   * Non-existing URL.
   */
  p5.web.response.set-status-code:404
  p5.web.echo:Oops 404, the place where URLs go to die!
