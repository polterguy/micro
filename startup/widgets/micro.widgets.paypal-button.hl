/*
 * Creates the __[micro.widgets.paypal-button]__ extension widget.
 */

/*
 * This widget injects a PayPal button on your page, allowing you to accept
 * payments from your visitors.
 *
 * The widget requires an __[.onok]__ lambda callback, which will be invoked when
 * the purchase has  successfully been accepted - In addition to a __[price]__
 * and (optionally) a __[currency]__ argument.
 *
 * Optionally pass in a __[custom]__ piece of text, that will be associated with the
 * payment, in your PayPal report.
 *
 * The __[currency]__ argument defaults to _"EUR"_ if omitted, implying EUROs.
 *
 * Notice, this will render a PayPal button according to your web.config settings, 
 * and more explicitly the _"paypal.xxx"_ parts of your web.config settings.
 * However, you can override the "paypal.xxx" values if you wish, to rather
 * use specific PayPal keys, instead of the default key values from web.config.
 *
 * If you wish to override the PayPal API key(s), provide a __[paypal.production]__
 * argument, being the PayPal key you wish to use instead of your web.config value.
 * You can also override __[paypal.sandbox]__ and __[paypal.type]__ if you wish.
 * If you set the paypal.sandbox argument to your _"sandbox"_ PayPal API key,
 * and you set paypal.type to _"sandbox"_, you can test your widget with your
 * PayPal developer test account.
 *
 * The widget will open up a modal window when clicked, using PayPal's JavaScript
 * API.
 *
 * **Notice**, if you want to use the PayPal button, you'll have to make sure
 * the PayPal JavaScript file is included on the initial pageload of your page.
 * You can ensure this by invoking the __[micro.widgets.paypal-button.ensure-checkout-js]__
 * Active Event during your initial pageload, for then to create your PayPal
 * button widget in a callback (if you wish).
 *
 * The PayPal button widget will however automatically include PayPal's
 * JavaScript file, so unless you intend to create your PayPal button(s)
 * during an Ajax callback, the above point is mute.
 */
create-event:micro.widgets.paypal-button

  /*
   * Signal node, to separate arguments from the rest of our event.
   */
  .signal

  /*
   * Default values.
   */
  .defaults
    custom:Phosphorus Five payment
    currency:EUR

  /*
   * Sanity check.
   */
  micro.lambda.contract.min:x:/..
    .onok
    price:decimal

  /*
   * Sanity checking optional arguments.
   */
  micro.lambda.contract.optional:x:/..
    custom:string
    paypal.production:string
    paypal.sandbox:string
    paypal.type:string
    currency:string

  /*
   * Adding all arguments to returned widget, except [price] and [currency].
   */
  add:x:/../*/return/*/container
    src:x:/@.signal/--(!/price!/currency!/~paypal.)

  /*
   * Checking if caller supplied his own [oninit] event, and if not, making sure 
   * widget gets one.
   */
  if:x:/../*/return/*/container/*/oninit
    not

    /*
     * Making sure widget gets an [oninit] event.
     */
    add:x:/../*/return/*/container
      src
        oninit

  /*
   * Appending logic into [oninit] that is necessary to render widget correctly.
   */
  add:x:/+2/*/*/.pars
    src:x:/@.signal/--
  eval-x:x:/+/*/*(/_price|/_currency|/_custom)
  add:x:/../*/return/*/container/*/oninit
    src

      /*
       * Forward evaluated above.
       */
      .pars
      _price:x:/../*/price?value
      _currency:x:(/@.signal/--/currency|/../*/.defaults/*/currency)/$?value
      _custom:x:(/@.signal/--/custom|/../*/.defaults/*/custom)/$?value

      /*
       * Retrieving PayPal settings from web.config.
       */
      .config
        paypal.sandbox
        paypal.production
        paypal.type
      p5.config.get:x:/-/*?name

      /*
       * Ensuring our PayPal JavaScript file is included on page.
       */
      micro.widgets.paypal-button.ensure-checkout-js

      /*
       * Including JavaScript file necessary to render our button, and our JS
       * logic that actually renders it.
       */
      p5.web.include-javascript:@"
paypal.Button.render({{
  env: '{1}',
  client:{{
    sandbox:'{2}',
    production:'{3}'}},
  commit: true,
  style:{{
    size: 'small',
    color: 'gold',
    shape: 'pill',
    label: 'checkout'}},
  payment: function(data, actions){{
    return actions.payment.create({{
      payment:{{
        transactions:[{{
          amount:{{
            total:{4},
            currency: '{5}'}}, 
          custom:'{6}'}}]
      }}
    }});
  }},
  onAuthorize: function(data, actions){{
    return actions.payment.execute().then(function(payment){{
      p5.$('{0}').raise('.onok');}});
  }}
}}, '#{0}');"
        :x:/../*/_event?value
        :x:(/@.pars/*/paypal.type|/@p5.config.get/*/paypal.type)/$?value
        :x:(/@.pars/*/paypal.sandbox|/@p5.config.get/*/paypal.sandbox)/$?value
        :x:(/@.pars/*/paypal.production|/@p5.config.get/*/paypal.production)/$?value
        :x:/../*/_price?value
        :x:/../*/_currency?value
        :x:/../*/_custom?value

  /*
   * Returning a widget, that will be turned into a PayPal button by PayPal.
   */
  return
    container





/*
 * Helper event to ensure PayPal's _"checkout.js"_ file is locally cached, to avoid
 * CORS problems.
 *
 * **Notice**, if you intend to use the __[micro.widgets.paypal-button]__ extension
 * widget on your page, you _must_ invoke this event during your page's initial
 * page load, due to the way that PayPal's servers are setup.
 */
create-event:micro.widgets.paypal-button.ensure-checkout-js

  /*
   * Checking if this is an Ajax Callback, and if it is, and PayPal's JavaScript
   * file has not already been "ensured", we throw an exception.
   */
  if
    p5.web.request.is-ajax-callback
    if
      fetch:x:/0/0?value
        p5.web.viewstate.get:micro.widgets.paypal-button.included
      not
      throw:You must include PayPal's JS file using [micro.widgets.paypal-button.ensure-checkout-js] in the initial load of your page when using the PayPal widget.
  p5.web.viewstate.set:micro.widgets.paypal-button.included
    src:bool:true

  /*
   * Checking for the easy version first, in case this is not a callback, 
   * we directly include the PayPal JavaScript file from PayPal's servers.
   */
  p5.web.include-javascript-file:@"https://www.paypalobjects.com/api/checkout.js"

