
/*
 * Creates the menu/navbar extension widget.
 *
 * A menu should contain exactly one [items] collection.
 * Each item should have at least a name, and optionally a value.
 * The name becomes the friendly name for your menu item, and the text displayed to the user.
 * The value becomes its ID, if supplied, otherwise an automatic ID is created.
 * Each menu item beneath [items] should at least have one of the following arguments.
 *
 * - [href] - Menu item becomes a hyperlink
 * - [onclick] - Menu item becomes an Ajax clickable button
 * - [items] - Sub menu items
 *
 * All other arguments are appended as is to the anchor hyperlink widget ("a" element).
 * The last point makes it possible for you to e.g. add custom attributes, such as "class" and "target" attributes
 * for your items.
 */
create-event:micro.widgets.menu

  /*
   * Used to separate parameters from the rest of the event.
   */
  .signal

  /*
   * Recursively adding items to menu.
   */
  add:x:/../*/return/*/nav/*/widgets
    micro.widgets.menu._create-items:x:/@.signal/--/items

  /*
   * Adding all other arguments.
   */
  add:x:/../*/return/*/nav
    src:x:/@.signal/--/<-(!/items)

  /*
   * Returning menu to caller.
   */
  return
    nav
      widgets

        /*
         * This widget becomes the "toggle expanded" button for clients having less than 800px resolution in width.
         */
        a
          href:#
          role:button
          innerValue:=
          onclick

            /*
             * Toggling 'expanded' class on main nav element.
             */
            p5.web.widgets.find-first-ancestor:x:/../*/_event?value
              element:nav
            micro.css.toggle:x:/@p5.web.widgets.find-first-ancestor/*/*?value
              class:expanded





/*
 * Helper event to create items, expects [_arg] pointing to [items].
 * Will recursively invoke self, for each menu having its own [items] collection, and returning a widget
 * hierarchy to caller.
 */
create-event:micro.widgets.menu._create-items

  /*
   * Looping through each child of specified [items] collection, and adding to return below.
   */
  for-each:x:/../*/_arg/#/*

    /*
     * Special treatment for [.separator]
     */
    if:x:/@_dp/#?name
      =:.separator
      add:x:/../*/return/*/ul/*/widgets
        src
          li
            innerValue:"<hr />"
      continue

    eval-x:x:/+/**
    add:x:/../*/return/*/ul/*/widgets
      src
        li
          widgets
            a:x:/@_dp/#?value
              innerValue:x:/@_dp/#?name

    /*
     * Adding all arguments supplied to current item into "a" widget of item, minus [items].
     */
    add:x:/../*/return/*/ul/*/widgets/0/-/*/widgets/0/-
      src:x:/@_dp/#/*(!/items)

    /*
     * Special treatment for items with [onclick], to make sure we remove the "toggled" CSS class
     * on all menu items when clicked.
     */
    add:x:/../*/return/*/ul/*/widgets/0/-/*/widgets/0/-/*/onclick
      src
        micro.widgets.menu._collapse-all:x:/../*/_event?value

    /*
     * Special treatment for items that does not have an [href] argument, making
     * sure they are treated like buttons, and have the default "#" href attribute.
     */
    if:x:/@_dp/#/*/href
      not
      add:x:/../*/return/*/ul/*/widgets/0/-/*/widgets/0/-
        src
          role:button
          href:#

    /*
     * Special treatment for items with [items] children collection.
     */
    if:x:/@_dp/#/*/items
      add:x:/../*/return/*/ul/*/widgets/0/-/*/widgets/0/-
        src
          onclick

            /*
             * Toggling "expanded" CSS class on related "ul" element.
             */
            p5.web.widgets.get-parent:x:/../*/_event?value
            p5.web.widgets.find-first:x:/@p5.web.widgets.get-parent/*/*?value
              element:ul
            micro.css.toggle:x:/@p5.web.widgets.find-first/*/*?value
              class:expanded

    /*
     * Recursively invoking self, if there are children.
     */
    if:x:/@_dp/#/*/items
      add:x:/../*/return/*/ul/*/widgets/0/-/*/widgets
        micro.widgets.menu._create-items:x:/@_dp/#/*/items

  /*
   * Returning widget hierarchy to caller.
   */
  return
    ul
      widgets





/*
 * Helper event to remove expanded property on all "ul" widgets in a specific menu.
 * Requires any widget as its [_arg] from within the menu.
 */
create-event:micro.widgets.menu._collapse-all
  p5.web.widgets.find-first-ancestor:x:/../*/_arg?value
    element:nav
  p5.web.widgets.find:x:/@p5.web.widgets.find-first-ancestor/*/*?value
    element:ul
    class:expanded
  micro.css.toggle:x:/@p5.web.widgets.find/*/*?value
    class:expanded

  /*
   * Removing "expanded" property on main "nav" widget.
   */
  get-widget-property:x:/@p5.web.widgets.find-first-ancestor/*/*?value
    class
  if:x:/@get-widget-property/*/*?value
    ~:expanded
    micro.css.toggle:x:/@p5.web.widgets.find-first-ancestor/*/*?value
      class:expanded
