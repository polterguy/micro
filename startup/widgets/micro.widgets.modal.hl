
/*
 * Creates the Modal extension widget.
 *
 * Notice, the [widget] collection of this widget, will be appended into the actual content parts
 * of the widget, while all other arguments will be simply appended as is into the root widget,
 * which actually is an "obscurer" that is shown in fixed position, obscuring all other widgets on page.
 *
 * Unless you want to explicitly override the default CSS classes, you should at the very least supply
 * a [class] argument, having a value of "micro-modal".
 */
create-event:micro.widgets.modal

  /*
   * Used to separate parameters from the rest of the event.
   */
  .signal

  /*
   * Adding all [widgets] into container widget for modal window.
   */
  add:x:/../*/return/**/widgets/=widgets
    src:x:/@.signal/--/widgets/*

  /*
   * Adding the rest of the arguments into return widget.
   */
  add:x:/../*/return/*/container
    src:x:/@.signal/--(!/widgets)

  /*
   * Returning widget to caller.
   */
  return
    container

      // Hack to make sure window doesn't flicker during initial display.
      style:"display:none;"
      oninit
        p5.web.include-css-file:@MICRO/media/main.css
        p5.web.include-css-file:@MICRO/media/ext.css
      onclick
        delete-widget:x:/../*/_event?value
      widgets
        container
          class:micro-modal-content

          // To stop propagation clicking the obscurer, which would close the modal widget, we need to trap onclick here.
          onclick:"event.stopPropagation();return false;"
          widgets
            container
              widgets:widgets
