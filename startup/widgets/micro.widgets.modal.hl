/*
 * Creates the Modal extension widget.
 *
 * Notice, the [widget] collection of this widget, will be appended into the actual content parts
 * of the widget, while all other arguments will be simply appended as is into the root widget,
 * which actually is an "obscurer" that is shown in fixed position, obscuring all other widgets on page.
 *
 * Unless you want to explicitly override the default CSS classes, you should at the very least supply
 * a [class] argument, having a value of "micro-modal".
 */
create-event:micro.widgets.modal

  /*
   * Used to separate parameters from the rest of the event.
   */
  .signal

  /*
   * Adding all [widgets] into container widget for modal window.
   */
  add:x:/../*/return/**/widgets/=widgets
    src:x:/@.signal/--/widgets/*

  /*
   * Adding the rest of the arguments into return widget.
   */
  add:x:/../*/return/*/container
    src:x:/@.signal/--(!/widgets)

  /*
   * Checking if caller supplied a [class] argument, and if not, defaulting
   * to the default class for widget.
   */
  if:x:/../*/class
    not
    add:x:/../*/return/*/container
      src
        class:micro-modal

  /*
   * Returning widget to caller.
   */
  eval-x:x:/+/*/*/onclick
  return
    container

      // Hack to make sure window doesn't flicker during initial display.
      style:"display:none;"
      data-window:modal
      oninit

        /*
         * Making sure we include Micro's CSS file.
         */
        p5.web.include-css-file:@MICRO/media/main.css

      onclick:@"if (event.currentTarget == event.target) {event.target.style.display='none';event.target.className='nothing';p5.$(event.target.id).raise('.ondelete');}"
      .ondelete
        delete-widget:x:/../*/_event?value
      widgets
        container
          class:micro-modal-content
          widgets
            container
              widgets:widgets
