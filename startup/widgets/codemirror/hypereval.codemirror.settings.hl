
/*
 * Creates Active Event to allow the user to edit his CodeMirror settings.
 */
create-event:micro.codemirror.settings

  /*
   * Signal node, to separate arguments from the rest of our lambda.
   */
  .signal

  /*
   * Adding any (optional) additional settings.
   */
  insert-after:x:/../*/create-widgets/**/micro.widgets.wizard-form/*/checkbox/*/.data-field/=line-numbers/.
    src:x:/@.signal/--/<-

  /*
   * Allowing user to edit his CM settings through a modal window.
   */
  create-widgets
    micro.widgets.modal:hypereval-settings-modal
      widgets
        h3
          innerValue:Settings
        micro.widgets.wizard-form:hypereval-settings-data
          text
            info:Font size
            .data-field:font-size
            type:number
            min:8
            max:20
            step:.25
            onkeydown:@"if (event.keyCode == 13) {p5.$('hypereval-settings-ok-button').raise('onclick');return false;}"
            oninit

              /*
               * Making sure we set value to whatever it already is, if anything.
               */
              .defaults
                font-size:8.25
              select-data:x:/*/*/micro.codemirror.settings
              set-widget-property:x:/../*/_event?value
                value:x:(/@select-data/*/*/font-size|/@.defaults/*/font-size)/$?value

              /*
               * Setting initial focus to font-size widget.
               */
              micro.page.set-focus:x:/../*/_event?value

          select
            info:Theme
            .data-field:theme
            oninit

              /*
               * Retrieving currently selected theme, defaulting to "hyperlambda".
               */
              .defaults
                theme:phosphorus
              select-data:x:/*/*/micro.codemirror.settings

              /*
               * Listing all available CSS files from themes folder,
               * and creating one option element for each, making sure
               * we set the currently chose theme as the active.
               */
              list-files:@MICRO/media/codemirror/theme/
                filter:.css
              for-each:x:/@list-files/*?name

                /*
                 * Figuring out filename, without its extension.
                 */
                split:x:/@_dp?value
                  =:/
                  =:.

                /*
                 * Checking if this is our currently selected theme.
                 */
                if:x:/@split/0/-2?name
                  =:x:(/@select-data/*/*/theme|/../*/.defaults/*/theme)/$?value
                  add:x:/..for-each/*/create-literal-widget
                    src:selected

                /*
                 * Creating option element wrapping currently iterated CSS file.
                 */
                create-literal-widget
                  parent:x:/../*/_event?value
                  element:option
                  innerValue:x:/@split/0/-2?name

          select
            info:Skin
            .data-field:skin
            oninit

              /*
               * Retrieving currently selected theme, defaulting to "hyperlambda".
               */
              .defaults
                skin:serious
              select-data:x:/*/*/micro.codemirror.settings

              /*
               * Listing all available CSS files from themes folder,
               * and creating one option element for each, making sure
               * we set the currently chose theme as the active.
               */
              list-files:@MICRO/media/skins/
                filter:.css
              for-each:x:/@list-files/*?name

                /*
                 * Figuring out filename, without its extension.
                 */
                split:x:/@_dp?value
                  =:/
                  =:.

                /*
                 * Checking if this is our currently selected theme.
                 */
                if:x:/@split/0/-2?name
                  =:x:(/@select-data/*/*/skin|/../*/.defaults/*/skin)/$?value
                  add:x:/..for-each/*/create-literal-widget
                    src:selected

                /*
                 * Creating option element wrapping currently iterated CSS file.
                 */
                create-literal-widget
                  parent:x:/../*/_event?value
                  element:option
                  innerValue:x:/@split/0/-2?name

          checkbox
            info:Line numbers
            .data-field:line-numbers
            oninit

              /*
               * Making sure we set checked value to whatever it already is, if anything.
               */
              .defaults
                line-numbers:bool:true
              select-data:x:/*/*/micro.codemirror.settings
              if:x:(/@select-data/*/*/line-numbers|/../*/.defaults/*/line-numbers)/$?value
                =:bool:true
                set-widget-property:x:/../*/_event?value
                  checked

          p
            innerValue:@"<strong>Warning</strong> - Saving your settings will reload your page!"

          div
            class:right
            widgets
              button:hypereval-settings-ok-button
                style:"margin-bottom:0;padding-left:35px;padding-right:35px;"
                innerValue:Save
                onclick

                  /*
                   * Serializing form, saving settings to p5.data database, 
                   * and applying new settings.
                   *
                   * Making sure we keep any additional "plugin settings".
                   */
                  micro.widgets.wizard-form.value:hypereval-settings-data
                  select-data:x:/*/*/micro.codemirror.settings
                  for-each:x:/-/*/*
                    if:x:/@micro.widgets.wizard-form.value/*/{0}
                      :x:/@_dp/#?name
                      set:x:/@_dp/#
                  delete-data:x:/*/*/micro.codemirror.settings
                  add:x:/../*/insert-data/*
                    src:x:(/@micro.widgets.wizard-form.value/*|/@select-data/*/*)
                  insert-data
                    micro.codemirror.settings

                  /*
                   * Refreshing page, since CodeMirror doesn't handle it very well
                   * when font is changed dynamically.
                   */
                  p5.web.reload-location
