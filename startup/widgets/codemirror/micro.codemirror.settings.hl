/*
 * Creates the __[micro.codemirror.settings]__ Active Event.
 */

/*
 * This event allows the user to edit his CodeMirror settings. It opens a modal
 * window, from where the user can see and change his general CodeMirror settings.
 *
 * The widget uses a __[micro.widgets.wizard-form]__ widget, which you can
 * dynamically add to. All arguments passed in to the event, will be assumed to
 * be wizard form arguments. See how Hyper IDE is using this event for an example
 * of how to _"extend"_ it with your own custom (additional) settings.
 */
create-event:micro.codemirror.settings

  /*
   * Signal node, to separate arguments from the rest of our lambda.
   */
  .signal

  /*
   * Adding any (optional) additional settings widgets.
   */
  insert-after:x:/../*/create-widgets/**/micro.widgets.wizard-form/*/checkbox/*/.data-field/=line-numbers/.
    src:x:/@.signal/--/<-

  /*
   * Allowing user to edit his CM settings through a modal window.
   */
  create-widgets
    micro.widgets.modal:hypereval-settings-modal
      widgets
        h3
          innerValue:Settings
        micro.widgets.wizard-form:hypereval-settings-data
          text
            info:Font size
            .data-field:font-size
            type:number
            min:8
            max:20
            step:.25
            onkeydown:@"if (event.keyCode == 13) {p5.$('hypereval-settings-ok-button').raise('onclick');return false;} else if (event.keyCode == 27) {p5.$('hypereval-settings-cancel-button').raise('onclick');return false;}"
            oninit

              /*
               * Making sure we set value to whatever it already is, if anything.
               */
              .defaults
                font-size:9.25
              p5.auth.my-settings.get
              set-widget-property:x:/../*/_event?value
                value:x:(/@p5.auth.my-settings.get/*/codemirror/*/font-size|/@.defaults/*/font-size)/$?value

              /*
               * Setting initial focus to font-size widget.
               */
              micro.page.set-focus:x:/../*/_event?value

          select
            info:Theme
            .data-field:theme
            oninit

              /*
               * Retrieving currently selected theme, defaulting to "hyperlambda".
               */
              .defaults
                theme:phosphorus
              p5.auth.my-settings.get

              /*
               * Listing all available CSS files from themes folder,
               * and creating one option element for each, making sure
               * we set the currently chose theme as the active.
               */
              list-files:@MICRO/media/codemirror/theme/
                filter:.css
              for-each:x:/@list-files/*?name

                /*
                 * Figuring out filename, without its extension.
                 */
                split:x:/@_dp?value
                  =:/
                  =:.

                /*
                 * Checking if this is our currently selected theme.
                 */
                if:x:/@split/0/-2?name
                  =:x:(/@p5.auth.my-settings.get/*/codemirror/*/theme|/../*/.defaults/*/theme)/$?value
                  add:x:/..for-each/*/create-literal-widget
                    src:selected

                /*
                 * Creating option element wrapping currently iterated CSS file.
                 */
                create-literal-widget
                  parent:x:/../*/_event?value
                  element:option
                  innerValue:x:/@split/0/-2?name

          checkbox
            info:Line numbers
            .data-field:line-numbers
            oninit

              /*
               * Making sure we set checked value to whatever it already is, if anything.
               */
              .defaults
                line-numbers:bool:true
              p5.auth.my-settings.get
              if:x:(/@p5.auth.my-settings.get/*/codemirror/*/line-numbers|/../*/.defaults/*/line-numbers)/$?value
                =:bool:true
                set-widget-property:x:/../*/_event?value
                  checked

          p
            innerValue:@"<strong>Warning</strong> - Saving your settings will reload your page!"

          div
            class:right strip
            widgets
              button:hypereval-settings-ok-button
                class:large
                innerValue:Save
                onclick

                  /*
                   * Serializing form, saving settings, and applying new settings.
                   *
                   * Making sure we keep any additional "plugin settings".
                   */
                  micro.form.serialize:hypereval-settings-data
                  p5.auth.my-settings.get
                  set:x:/@p5.auth.my-settings.get/*/codemirror
                  add:x:/../*/p5.auth.my-settings.set/*/codemirror
                    src:x:/@micro.form.serialize/*
                  add:x:/../*/p5.auth.my-settings.set
                    src:x:/@p5.auth.my-settings.get/*
                  p5.auth.my-settings.set
                    codemirror

                  /*
                   * Refreshing page, since CodeMirror doesn't handle it very well
                   * when font is changed dynamically.
                   */
                  p5.web.reload-location

              button:hypereval-settings-cancel-button
                innerValue:Close
                title:Close without saving your settings
                onclick

                  /*
                   * Simply deletes modal widget.
                   */
                  delete-widget:hypereval-settings-modal
