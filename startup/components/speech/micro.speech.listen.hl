
/*
 * Creates the __[micro.speech.listen]__ Active Event.
 */

/*
 * This event allows you to listen for speech recognition on the client.
 *
 * Will initiate a speech recognition input object on the client, and invoking
 * the specified __[onfinish]__ when some text has been captured, passing the
 * recognized text onwards to your lambda as a __[text]__ argument.
 *
 * Optionally pass in __[lang]__ as language to capture. The default value for
 * __[lang]__ is _"en"_ implying English.
 */
create-event:micro.speech.listen

  /*
   * Defaults if no argument(s) are supplied.
   */
  .defaults
    lang:en

  /*
   * Making sure we check for mandatory and optional arguments.
   */
  micro.lambda.contract.min:x:/..
    onfinish
  micro.lambda.contract.optional:x:/..
    lang:string

  /*
   * Making sure we include our JavaScript file.
   */
  p5.web.include-javascript-file:@MICRO/media/speak.js

  /*
   * Creating an invisible widget, which will invoke our callback, once any
   * speech has been captured.
   */
  add:x:/../*/create-literal-widget/*/.onfinish/*/.lambda
    src:x:/../*/onfinish/*
  create-literal-widget
    element:span
    style:"display:none !important;"
    .onfinish

      /*
       * Wraps our lambda callback, supplied during instantiation.
       */
      .lambda

      /*
       * Deleting widget, before we invoke lambda callback supplied during 
       * instantiation, passing in [text] to callback.
       */
      delete-widget:x:/../*/_event?value
      p5.web.post.get:micro-speech-recognized-text
      eval-x:x:/+/*
      eval:x:/@.lambda
        text:x:/@p5.web.post.get/*?value

  /*
   * Creating JavaScript necessary to invoke callback once speak is finished.
   */
  .extra
  set:x:/@.extra?value
    src:@"if (this._handle == true) {{var r = this.recognised;p5.$('{0}').raise('.onfinish', {{onbefore: function (pars, evt){{pars.push(['micro-speech-recognized-text', r]);}}}});}}"
      :x:/@create-literal-widget?value

  /*
   * Sending JavaScript necessary to invoke listening process.
   */
  p5.web.send-javascript:@"p5.speech.listen('{0}', function(){{{1}}});"
    :x:(/../*/lang|/@.defaults/*/lang)/$?value
    :x:/@.extra?value
