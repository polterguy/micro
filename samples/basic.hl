

/*
 * Default startup file for Micro.
 * Will showcase all the main widgets in Micro.
 */


/*
 * Include main CSS file for Micro.
 */
p5.web.include-css-file:@MICRO/media/main.css
p5.web.page.set-title:Micro basic examples


/*
 * Checking if another "content" widget exists, and if so, deleting it, before we create our own.
 */
if
  fetch:x:/0/0?value
    widget-exists:content
  delete-widget:content
create-container-widget:content
  class:container
  widgets
    a
      href:/
      innerValue:Home
      style:"position:absolute;right:15px;"


/*
 * Introduction
 */
create-widget
  parent:content
  class:row
  widgets
    div
      class:col-100
      widgets
        h1
          innerValue:Micro
        p
          innerValue:@"Welcome to the Micro 'kitchen sink' example. Micro is a microscopic Ajax widget library for Phosphorus Five. 
Below are examples of Micro in usage."
        p
          innerValue:@"Micro is created to be as little in your way as possible, allowing you to control most aspects yourselves, while still
solving all the common problems, which are probably common for most web apps. For instance, by modifying a handful of simple CSS variables,
you can override its entire color profile. It doesn't use any fancy (downloadable) fonts, leaving this up to you, etc, etc, etc."
        p
          innerValue:@"The basic idea with Micro, is that in general it does as 'little as possible', while being as small as possible, 
and solves only the common tasks needed for all web apps.To see how they work in combination with your favourite skin, feel free to select 
a skin from the select dropdown box below."
    div
      class:col-100
      widgets
        micro.widgets.skin-selector


/*
 * Typography widgets.
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col
      widgets
        h1
          innerValue:H1 header
        h2
          innerValue:H2 header
        h3
          innerValue:H3 header
        h4
          innerValue:H4 header
        h5
          innerValue:H5 header
        h6
          innerValue:H6 header
        p
          innerValue:This is some arbitrary piece of text in a paragraph
        p
          widgets
            strong
              innerValue:This is some arbitrary strong text
            em
              innerValue:This is some arbitrary emphasized text
            code
              innerValue:This is some inline code
            small
              innerValue:This is some arbitrary small text
            a
              href:https://google.com
              innerValue:Hyperlinks
        ul
          widgets
            li
              innerValue:Bulleted list 1
            li
              innerValue:Bulleted list 2
        ol
          widgets
            li
              innerValue:Ordered list
            li
              innerValue:Ordered list
        blockquote
          innerValue:This is some arbitrary piece of text in a blockquote
        pre
          innerValue:@"This is
     some preformatted
 text"


/*
 * The grid system
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col
      widgets
        h3
          innerValue:The grid system


/*
 * Grid system, floating columns.
 */
create-widget
  parent:content
  class:row
  widgets
    p
      class:col
      innerValue:@"The grid system is created using the flexbox model, which allows you to create any number of columns, as you see fit.
Your content should normally be embedded inside of a 'col', which should be inside a 'row', which should be inside a 'container'."
    p
      class:col
      innerValue:For instance this row, contains 3 columns, which will simply divide the available space into 3.
    p
      class:col
      innerValue:While if you resize your page, below 800px, it will 'pop' such that each column takes up 100% of the width for small devices.


/*
 * Grid system, fixed size.
 */
create-widget
  parent:content
  class:row
  widgets
    p
      class:col-33
      innerValue:This column use the 'col-33' class, which means it will use 33% of the available space.
    p
      class:col-67
      innerValue:While this will use 'col-67' and hence 67%. There are explicit column widths for 10, 20, 25, 30, 33, 40, 50, 60, 67, 70, 75, 80 and 90 percent in the grid system.


/*
 * Grid system, offsetting columns.
 */
create-widget
  parent:content
  class:row
  widgets
    p
      class:col-25
      innerValue:This column use the 'col-25' class, which means it will use 25% of the available space.
    p
      class:col-50 offset-25
      innerValue:@"While this will use 'col-50'and 'offset-25', which means it will be moved forward by 25% of the available space.
There exists offset classes for 10, 20, 25, 30, 33, 40, 50, 60, 67, 70, 80 and 90 percent in Micro."


/*
 * Forms, buttons
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col-100
      widgets
        h3
          innerValue:Buttons
        p
          innerValue:@"This is the styling of a button. Like all elements and widgets, the color profile can easily be overridden by simply changing
a couple of CSS variables."
    div
      class:col-100
      widgets
        button
          innerValue:Default


/*
 * Forms, controlling size.
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col-100
      widgets
        h3
          innerValue:Text input elements
        p
          innerValue:Below is an example of 3 different text input elements.
    div
      class:col-100
      widgets
        input
          class:wider
          placeholder:Wider text input ...
          value:This is a value
    div
      class:col-100
      widgets
        input
          placeholder:This is placeholder ...
    div
      class:col-100
      widgets
        input
          class:smaller
          placeholder:Smaller ...
    div
      class:col-100
      widgets
        p
          innerValue:Most elements can be made either wider or smaller, by adding the 'wider' or 'smaller' class to them.


/*
 * Select widgets.
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col-100
      widgets
        h3
          innerValue:Select form elements
        p
          innerValue:Below is an example of 3 different select form elements.
    div
      class:col-100
      widgets
        select
          class:wider
          widgets
            option
              innerValue:Option 1
            option
              innerValue:Option 2
    div
      class:col-100
      widgets
        select
          widgets
            option
              innerValue:Option 1
            option
              innerValue:Option 2
    div
      class:col-100
      widgets
        select
          class:smaller
          widgets
            option
              innerValue:Option 1
            option
              innerValue:Option 2


/*
 * Mixing form elements
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col-100
      widgets
        h3
          innerValue:Mixing form elements
        p
          innerValue:You can mix form elements, and they will float next to each other, according to the available space.
    div
      class:col-100
      widgets
        input
          class:smaller
          placeholder:Text input ...
        select
          widgets
            option
              innerValue:Option 1
            option
              innerValue:Option 2
        button
          innerValue:OK


/*
 * Textareas
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col-100
      widgets
        h3
          innerValue:Textareas
        p
          innerValue:Below are the 3 basic textareas in Micro
    div
      class:col-100
      widgets
        literal
          element:textarea
          class:wider
          placeholder:Wider ...
          innerValue:This textarea has a value, and is wider
    div
      class:col-100
      widgets
        literal
          element:textarea
          placeholder:Default ...
    div
      class:col-100
      widgets
        literal
          element:textarea
          class:smaller
          placeholder:Smaller ...


/*
 * Checkboxes
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col-100
      widgets
        h3
          innerValue:Checkboxes
        p
          innerValue:@"Checkboxes are rendered such that they become slightly larger, and they're styled.
You can also add a label, either before or after a checkbox."
    div
      class:col-100
      widgets
        label
          for:check-1
          innerValue:Checkbox 1
        input:check-1
          type:checkbox
    div
      class:col-100
      widgets
        input:check-2
          type:checkbox
          checked
        label
          for:check-2
          innerValue:Checkbox 2


/*
 * Radio buttons
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col-100
      widgets
        h3
          innerValue:Radio buttons
        p
          innerValue:@"Radio buttons are rendered such that they become slightly larger, and they're styled.
You can also add a label, either before or after a radio button, just like you can with checkboxes."
    div
      class:col-100
      widgets
        label
          for:radio-1
          innerValue:Radio button 1
        input:radio-1
          type:radio
          name:radio-group-1
    div
      class:col-100
      widgets
        input:radio-2
          type:radio
          checked
          name:radio-group-1
        label
          for:radio-2
          innerValue:Radio button 2


/*
 * Strips
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col-100
      widgets
        h3
          innerValue:Strips
        p
          innerValue:You can add mostly any form element inside of a 'strip' which will group relevant form elements together. First a button strip.
    div
      class:col-100 strip
      widgets
        button
          innerValue:OK
        button
          innerValue:Cancel
    div
      class:col-100
      widgets
        p
          innerValue:Then a text input and a select list.
    div
      class:col-100 strip
      widgets
        input
          placeholder:Text input ...
          class:smaller
        select
          class:smaller
          widgets
            option
              innerValue:Option 1
            option
              innerValue:Option 2
    div
      class:col-100
      widgets
        p
          innerValue:When you create a 'strip' you can also add labels, which will be rendered as a part of the strip itself.
    div
      class:col-100
      widgets
        div
          class:strip
          widgets
            label
              for:input-1
              innerValue:$
            input:input-1
              placeholder:Foo input ...
              class:smaller
    div
      class:col-100
      widgets
        div
          class:strip
          widgets
            input:input-2
              placeholder:Text input ...
              class:smaller
            label
              for:input-2
              innerValue:$
    div
      class:col-100
      widgets
        div
          class:strip
          widgets
            label
              for:select-1
              innerValue:$
            select:select-1
              class:smaller
              widgets
                option
                  innerValue:Option 1
                option
                  innerValue:Option 2
    div
      class:col-100
      widgets
        div
          class:strip
          widgets
            select:select-2
              class:smaller
              widgets
                option
                  innerValue:Option 1
                option
                  innerValue:Option 2
            label
              for:select-2
              innerValue:$
    div
      class:col-100
      widgets
        p
          innerValue:@"You can also combine checkboxes, labels, text input elements, and select elements as you see fit, in the same strip.
However, if you add a checkbox or a radio button to a 'strip', you need to put it into a span HTML element. First a text input, a label and a checkbox grouped
together in a strip."
    div
      class:col-100 strip
      widgets
        input:input-4
          class:smaller
          placeholder:Bar ...
        label
          for:chk-5
          innerValue:C
        span
          widgets
            input:chk-5
              type:checkbox
              checked
    div
      class:col-100
      widgets
        p
          innerValue:Then a couple of radio buttons, with a label each.
    div
      class:col-100 strip
      widgets
        label
          for:radio-5
          innerValue:$
        span
          widgets
            input:radio-5
              type:radio
              checked
              name:radio-group-2
        label
          for:radio-6
          innerValue:€
        span
          widgets
            input:radio-6
              type:radio
              name:radio-group-2
    div
      class:col-100
      widgets
        p
          innerValue:Then a label, text input element and a checkbox.
    div
      class:col-100 strip
      widgets
        label
          for:input-6
          innerValue:$
        input:input-6
          class:smaller
          placeholder:Foo ...
        span
          widgets
            input:check-7
              type:checkbox
    div
      class:col-100
      widgets
        p
          innerValue:Then a label, select list and button.
    div
      class:col-100 strip
      widgets
        label
          for:sel-6
          innerValue:$
        select:sel-6
          class:smaller
          widgets
            option
              innerValue:Option 1
            option
              innerValue:Option 2
        button
          innerValue:!


/*
 * More size control over form elements.
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col-100
      widgets
        h3
          innerValue:More form size control
        p
          innerValue:@"You can combine the grid system with form elements, and use the 'fill' class on most form elements, to have them fill the entire
available width of their parent column. This also makes your form elements become responsive, since the column themselves will resize to 100% width,
if the viewport becomes less than 800px."
    div
      class:col-75
      widgets
        input
          class:fill
          placeholder:Fills parent column ...
    div
      class:col-25
      widgets
        button
          class:fill
          innerValue:OK


/*
 * Table HTML elements.
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col-100
      widgets
        h3
          innerValue:Tables
        p
          innerValue:@"Tables will be pulled slightly to the left, to allow for the first column's content to align with the rest of the content on the page. 
A default table looks like the following."
    div
      class:col-100
      widgets
        table
          widgets
            thead
              innerValue:@"<tr><th>First column</th><th>Second column</th></tr>"
            tbody
              widgets
                tr
                  innerValue:"<td>First cell</td><td>Second cell</td>"
                tr
                  innerValue:"<td>Third cell</td><td>Fourth cell</td>"


/*
 * Misc. classes.
 */
create-widget
  parent:content
  class:row prepend-top
  widgets
    div
      class:col-100
      widgets
        h3
          innerValue:Misc. classes
        p
          innerValue:@"Use the 'prepend-top' to add some additional 25px of top margin, to create some spacing between for instance rows."
    div
      class:col-100 emphasized
      widgets
        p
          innerValue:@"This column has the 'emphasized' class added to it, which can be used to signify something important.
Notice, all of these classes will move your column 1em outwards from the center of your screen, such that the text content is still nicely aligned
with the other content on your page. It also creates a border-radius around your column.
These classes don't mix well with other content, unless you use the 'col-100' class, such that they take up the entire available width."
        p
          innerValue:@"Inside of this column, we also have a button, which is right-aligned, by using the 'right' class on the parent element."
        div
          class:right
          widgets
            button
              class:hollow
              innerValue:OK
    div
      class:col-100 success
      widgets
        p
          innerValue:@"This column has the 'success' class added to it, which can be used to signify success."
    div
      class:col-100 warning
      widgets
        p
          innerValue:@"This column has the 'warning' class added to it, which can be used to signify danger, or a warning of some sort."


/*
 * Fullscreen container
 */
create-container-widget:content-fullscreen
  class:container-fullscreen bg
  widgets
    div
      class:row
      widgets
        div
          class:col-100 prepend-top air
          innerValue:@"
<h3 class=""center"">Fullscreen containers</h3>
<p>This is a fullscreen container. You can add as many containers as you wish onto your page.</p>
<p>This container also has the 'bg' class associated with it. The header has the 'center' class. And the columns themselves has the 'air' class
associated with them, to create some margin between the borders of the container, and its columns.</p>
<p>Below you can find all the explicitly sized grid column classes, for your reference.</p>"


/*
 * All col classes for reference purposes.
 */
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-10 air
      widgets
        p
          innerValue:@"col-10"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-20 air
      widgets
        p
          innerValue:@"col-20"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-25 air
      widgets
        p
          innerValue:@"col-25"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-30 air
      widgets
        p
          innerValue:@"col-30"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-33 air
      widgets
        p
          innerValue:@"col-33"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-40 air
      widgets
        p
          innerValue:@"col-40"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-50 air
      widgets
        p
          innerValue:@"col-50"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-60 air
      widgets
        p
          innerValue:@"col-60"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-67 air
      widgets
        p
          innerValue:@"col-67"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-70 air
      widgets
        p
          innerValue:@"col-70"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-75 air
      widgets
        p
          innerValue:@"col-75"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-80 air
      widgets
        p
          innerValue:@"col-80"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-90 air
      widgets
        p
          innerValue:@"col-90"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-100 air
      widgets
        p
          innerValue:@"col-100"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col air prepend-top
      widgets
        h3
          class:center
          innerValue:Floating columns
        p
          innerValue:Below is an example of using the undefined columns together.
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col air
      widgets
        p
          innerValue:@"col 1/2"
          style:"background:#d0d0d0;"
    div
      class:col air
      widgets
        p
          innerValue:@"col 2/2"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col air
      widgets
        p
          innerValue:@"col 1/3"
          style:"background:#d0d0d0;"
    div
      class:col air
      widgets
        p
          innerValue:@"col 2/3"
          style:"background:#d0d0d0;"
    div
      class:col air
      widgets
        p
          innerValue:@"col 3/3"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col air
      widgets
        p
          innerValue:@"col 1/4"
          style:"background:#d0d0d0;"
    div
      class:col air
      widgets
        p
          innerValue:@"col 2/4"
          style:"background:#d0d0d0;"
    div
      class:col air
      widgets
        p
          innerValue:@"col 3/4"
          style:"background:#d0d0d0;"
    div
      class:col air
      widgets
        p
          innerValue:@"col 4/4"
          style:"background:#d0d0d0;"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col air
      widgets
        p
          innerValue:@"col 1/5"
          style:"background:#d0d0d0;"
    div
      class:col air
      widgets
        p
          innerValue:@"col 2/5"
          style:"background:#d0d0d0;"
    div
      class:col air
      widgets
        p
          innerValue:@"col 3/5"
          style:"background:#d0d0d0;"
    div
      class:col air
      widgets
        p
          innerValue:@"col 4/5"
          style:"background:#d0d0d0;"
    div
      class:col air
      widgets
        p
          innerValue:@"col 5/5"
          style:"background:#d0d0d0;"
    div
      class:col-100 air
      innerValue:@"<p>Etc ...</p>"
create-widget
  parent:content-fullscreen
  class:row
  widgets
    div
      class:col-100 air prepend-top
      widgets
        h3
          class:center
          innerValue:Nested rows
        p
          innerValue:Below is an example of nesting rows inside of columns.
    div
      class:col air
      widgets
        div
          class:row
          widgets
            p
              class:col-33
              innerValue:Nested col 1 - 33%
              style:"background:#f0d0d0;"
            p
              class:col-67
              innerValue:Nested col 2 - 67%
              style:"background:#d0f0d0;"
    div
      class:col air
      widgets
        div
          class:row
          widgets
            p
              class:col
              innerValue:Nested col 3 - 'col'
              style:"background:#d0d0f0;"
            p
              class:col
              innerValue:Nested col 4 - 'col'
              style:"background:#f0d0f0;"
    p
      class:col-100 air
      innerValue:@"Notice, when you nest columns, your inner columns cannot have the 'air' class associated with them, since this will wrap
your columns unto the next row, and not nicely align them with each other."
    p
      class:col-100 air
      innerValue:@"Notice also that what the 'bg' class does, is dependent upon your skin of choice. Without any skins, it becomes
simply gray. With a skin, it usually either becomes some repeating pattern, or some linear-gradient color."
